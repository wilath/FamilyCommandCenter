{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TransPipe {\n  transform(task, done, change) {\n    return task.filter(e => e.isDone === done);\n  }\n}\nTransPipe.ɵfac = function TransPipe_Factory(t) {\n  return new (t || TransPipe)();\n};\nTransPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"donePipe\",\n  type: TransPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AASA,OAAM,MAAOA,SAAS;EAEpBC,SAAS,CAACC,IAAiB,EAAEC,IAAa,EAAEC,MAAa;IAEvD,OAAOF,IAAI,CAACG,MAAM,CAAEC,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAKJ,IAAI,CAAC;EAC7C;;AALWH,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;;QAATA,SAAS;EAAAQ;AAAA","names":["TransPipe","transform","task","done","change","filter","e","isDone","pure"],"sourceRoot":"","sources":["C:\\Users\\Sebastian\\Desktop\\Pages\\angapp\\src\\app\\shared\\trans.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { Task } from '../model/task';\nimport { Subject } from 'rxjs';\n\n@Pipe({\n  name: 'donePipe',\n  pure: true\n \n})\nexport class TransPipe implements PipeTransform {\n\n  transform(task: Array<Task>, done: boolean, change:number){\n    \n    return task.filter((e)=> e.isDone === done)\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}